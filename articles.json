[
    {
        "uuid": "00001",
        "type": "development",
        "images": [],
        "title": "DRAFT VanillaJS Toolkit & Chris Ferdinandi",
        "paragraphs": [
            "<h2>Vanilla JS</h2>",
            "<p>Vanilla Javascript is just the complicated way to say plain Javascript, unadorned with frameworks or too many outside libraries. At this point in my career, I think it is possibly the best place to start for anyone starting out in web development. </p>",
            "<p>Why? Simplicity & gradual complexity. A good foundation in code starts very inefficiently. Libraries and obscure helper functions might make the finished work more polished. And polished work makes us feel good. However, because libraries come and go, it is important to be able to create the entire thing without the helper functions and libraries. JQuery, React, most anything that you will npm install are shortcuts. They are important, but at the beginning you have to take the long way around. Believe me, I've lived it. As much as I enjoy web development, something is wrong with teaching practice around anything that feels inefficient.</p>",
            "<p>What do I mean that something wrong wth the teaching? There are two distinct styles that I appreciate. Things become complicated when these two styles become intertwined. Th first style is the long lecture. The instructor has full control over the direction of the class and expounds on the minutia. It usually answers the question 'Why?'. The second style is the short-and-sweet. It answers the question, 'How?'. </p>",
            "<p> Well, when we communicate, we make assumptions about our audience. I assume my audience reads English (or has a passable translator). Also, I have to admit I use a more advanced vocabulary. You're typical YouTube tutorial uses a vocabulary (and thought patterns) that come naturally to people who find coding easy. And as juniors are brought into the periphery of a senior, these words and patterns are absolutely crucial. Unfortunately, concepts with much deeper implications get thrown at students faster than can be reasonably understood. The introduction to development needs work. Students need an invitation to learning.</p>",
            "<p>So when I recommend Chris Ferdinandi's VanillaJS Toolkit and his guides, I'm saying they are approachable for me. It is very clearly in the short-and-sweet style. I found them an astoundingly good refresher on a lot of concepts I had encountered but forgot. Or my Sr. Devs knew, but only barely mentioned (<b>*ahem*</b> design patterns <b>*ahem*</b>). In any case, I appreciate Chris Ferdinandi's style and his commitment to simplicity and clarity. If you are a true beginner, you may need to take the course a couple of times, but it is an excellent place to start.</p>"
        ],
        "paragraph_classes": []
    },
    {
        "uuid": "00002",
        "type": "development",
        "images": [],
        "title": "My Roadmap",
        "paragraphs": [
            "<p>My current development roadmap looks like this: </p>",
            "<ul>",
            "<li>Udemy: React - The Complete Guide (from Academind) by Maximilian Schwarzmüller</li>",
            "<li>Udemy: VueJS 2 - The Complete Guide (from Academind) by Maximilian Schwarzmüller</li>",
            "<li>Udemy: Learn Python Programming Masterclass by Tim Buchalka</li>",
            "</ul>"
        ],
        "paragraph_classes": []
    }
]